#####
### This workflow is responsible for:
### 1. semantic versioning our code
### 2. update the CHANGELOG.md file as commits reaches one of the following branches
###    though merging pull requests: "bugfix" and "release-candidate".
### 3. create a PR to sync "release-candidate" and "bugfix" branches as new commits reaches master branch
### master -> bugfix             -> bugfix-123             -> bugfix             -> master  -> release-candidate
### master -> release-candidate  -> release-candidate-123  -> release-candidate  -> master  -> bugfix
#####
on:
  pull_request:
    branches:
      - master
    types: [ closed ]

jobs:
  ### 1. semantic versioning our code
  ### 2. update the CHANGELOG.md file as commits reaches one of the following branches
  ###    though merging pull requests: "bugfix" and "release-candidate".
  bump-and-tag:
  # https://github.community/t/trigger-workflow-only-on-pull-request-merge/17359
    if: github.event.pull_request.merged == true # run only when a PR has been merged (someone pushed the green button).
    runs-on: ubuntu-latest
    steps:
    - name: debugging
      run: |
        echo "[debug] ref branch is '${{ github.ref }}'"
        echo "[debug] base branch is '${{ github.event.pull_request.head.ref }}'"

    - name: checkout on "master" branch
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}

    - name: setup git config
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub action"

    ## Necessary in order to avoid "Failed to replace env in config: ${FONT_AWESOME_TOKEN}"
    ## https://www.aboutmonica.com/blog/adding-environment-variables-to-github-actions
    - name: bump version on "package.json"
      # env:
      #   FONT_AWESOME_TOKEN: ${{ secrets.FONT_AWESOME_TOKEN }}
      #   NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        echo "[debug] github ref: ${{ github.event.pull_request.head.ref }}"
        # npm config set //npm.fontawesome.com/:_authToken=${FONT_AWESOME_TOKEN}
        # npm config set //registry.npmjs.org/:_authToken=${NPM_TOKEN}

        if [ "${{ github.event.pull_request.head.ref }}" == "release-candidate" ]; then
          echo "[debug] on branch 'release-candidate': bumping minor version"
          npm version minor
        fi

        if [ "${{ github.event.pull_request.head.ref }}" == "bugfix" ]; then
          echo "[debug] on branch 'bugfix': bumping patch version"
          npm version patch
        fi

    - name: update CHANGELOG.md file (printing version)
      run: chmod +x .github/scripts/update-changelog.sh && ./.github/scripts/update-changelog.sh print-version

    - name: push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

  ### 3. create a PR to sync "release-candidate" and "bugfix" branches as new commits reaches master branch
  sync-branches:
    # https://github.community/t/trigger-workflow-only-on-pull-request-merge/17359
    if: github.event.pull_request.merged == true # run only when a PR has been merged (someone pushed the green button).
    needs: bump-and-tag
    runs-on: ubuntu-latest
    steps:
    - name: debugging
      run: |
        echo "[debug] ref branch is '${{ github.ref }}'"
        echo "[debug] base branch is '${{ github.event.pull_request.head.ref }}'"

    - name: checkout on "master" branch
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}

    - name: setup git config
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub action"

    - name: get latest changes on CHANGELOG.md
      # https://linuxconfig.org/add-character-to-the-beginning-of-each-line-using-sed
      # https://stackoverflow.com/questions/55537602/read-file-until-regex-in-changelog-file-using-bash
      # https://stackoverflow.com/a/6539865
      # https://github.com/actions/starter-workflows/issues/68#issuecomment-592997170
      # run: echo '::set-output name=changelog_latest_changes::$(sed '1p;1,/^##/!d;/##/d' ./CHANGELOG.md | paste -sd "\\\n" -)'
      run: |
        export CHANGELOG_LATEST_CHANGES=$(sed '1p;1,/^##/!d;/##/d' ./CHANGELOG.md | paste -sd "\\\n" -)
        echo "LATEST_CHANGES=$(echo $CHANGELOG_LATEST_CHANGES)" >> $GITHUB_ENV
        echo '::set-output name=changelog_latest_changes::$CHANGELOG_LATEST_CHANGES'
      id: get_latest_changes
    - name: debugging
      run: |
        echo 'The latest changes described on CHANGELOG.md are: ${{ steps.get_latest_changes.outputs.changelog_latest_changes }}'

    - name: syncing bugfix -> master -> release-candidate
      uses: repo-sync/pull-request@v2
      if: ${{ github.event.pull_request.head.ref == 'bugfix' }}
      with:
        destination_branch: "release-candidate"
        github_token: ${{ secrets.GITHUB_TOKEN }}
        pr_body: |
          # Alterações contempladas :pencil:

          ${{ steps.get_latest_changes.outputs.changelog_latest_changes }}
          ---
          ${{ $LATEST_CHANGES }}
        pr_label: "syncing-branches"
        pr_title: "syncing bugfix -> master -> release-candidate"

    - name: syncing release-candidate -> master -> bugfix
      uses: repo-sync/pull-request@v2
      if: ${{ github.event.pull_request.head.ref == 'release-candidate' }}
      with:
        destination_branch: "bugfix"
        github_token: ${{ secrets.GITHUB_TOKEN }}
        pr_body: |
          # Alterações contempladas :pencil:

          ${{ steps.get_latest_changes.outputs.changelog_latest_changes }}
          ---
          ${{ $LATEST_CHANGES }}
        pr_label: "syncing-branches"
        pr_title: "syncing release-candidate -> master -> bugfix"
